import React,{useRef,useState} from 'react'; import Navbar from '../components/Navbar.jsx'; import { TemplateAPI } from '../services/api.js'; import { detectPlaceholders } from '../utils/placeholder.js'; import { useNavigate } from 'react-router-dom';
export default function Upload(){ const [title,setTitle]=useState(''); const [description,setDescription]=useState(''); const [content,setContent]=useState(''); const [fields,setFields]=useState([]); const [msg,setMsg]=useState(''); const editorRef=useRef(null); const nav=useNavigate();
  function onFile(e){ const file=e.target.files?.[0]; if(!file) return; const ext=(file.name.split('.').pop()||'').toLowerCase(); if(ext==='txt'||ext==='html'||(file.type&&file.type.startsWith('text/'))){ const r=new FileReader(); r.onload=()=>{ setContent(String(r.result||'')); setMsg(''); }; r.onerror=()=>setMsg('No se pudo leer el archivo.'); r.readAsText(file);} else { setMsg('Formato no soportado en la demo. Usa .txt/.html'); } }
  function markSelection(){ const ta=editorRef.current; if(!ta) return; const s=ta.selectionStart||0; const e=ta.selectionEnd||0; const name=window.prompt('Nombre del campo (sin espacios):',''); if(!name) return; if(s===e){ alert('Selecciona el texto que quieres marcar.'); return; } const before=content.slice(0,s); const after=content.slice(e); const n=before+'{{'+name+'}}'+after; setContent(n); if(!fields.find(f=>f.name===name)) setFields([...fields,{name,label:name,type:'text',required:true}]); }
  function detect(){ const arr=detectPlaceholders(content); setFields(arr.map(n=>({name:n,label:n,type:'text',required:true}))); }
  async function save(){ if(!title.trim()||!content.trim()){ setMsg('Título y contenido son obligatorios'); return; } let f=fields; if(f.length===0){ const arr=detectPlaceholders(content); f=arr.map(n=>({name:n,label:n,type:'text',required:true})); if(f.length===0){ setMsg('Agrega al menos un campo con {{nombre}} o marca una selección.'); return; } setFields(f); } const res=await TemplateAPI.create({ title, description, fields:f, content }); if(res?.ok) nav(`/form/${res.item._id}`); else setMsg(res?.message||'Error guardando'); }
  return (<><Navbar/><section className='container-app py-10'><h2 className='text-2xl font-bold text-slate-900'>Subir y convertir documento a plantilla</h2>{msg&&<div className='mt-3 rounded-xl border border-amber-200 bg-amber-50 px-3 py-2 text-sm text-amber-800'>{msg}</div>}
    <div className='mt-4 rounded-2xl border border-slate-200 bg-white p-5 space-y-4'><div className='flex flex-col sm:flex-row gap-3'><input type='file' accept='.txt,.html,text/plain,text/html' onChange={onFile}/></div>
    <div className='grid sm:grid-cols-2 gap-4'><div><label className='text-sm font-medium text-slate-800'>Título</label><input className='mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-600' value={title} onChange={e=>setTitle(e.target.value)}/></div>
    <div><label className='text-sm font-medium text-slate-800'>Descripción</label><input className='mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-600' value={description} onChange={e=>setDescription(e.target.value)}/></div></div>
    <div><label className='text-sm font-medium text-slate-800'>Contenido</label><textarea ref={editorRef} className='mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 min-h-56 focus:outline-none focus:ring-2 focus:ring-blue-600' value={content} onChange={e=>setContent(e.target.value)}/>
    <div className='mt-2 flex flex-wrap gap-2'><button className='px-3 py-1.5 rounded-lg border border-slate-300 text-slate-700 hover:bg-slate-50' onClick={markSelection}>Marcar selección como campo</button>
    <button className='px-3 py-1.5 rounded-lg border border-slate-300 text-slate-700 hover:bg-slate-50' onClick={detect}>{'Detectar {{llaves}}'}</button></div></div>
    <div><h4 className='font-semibold text-slate-900'>Campos detectados</h4>{fields.length===0? <p className='text-sm text-slate-600'>{'Aún no hay campos. Usa {{nombre}} en el contenido o marca una selección.'}</p> :
      <div className='mt-2 flex flex-wrap gap-2'>{fields.map(f=>(<span key={f.name} className='text-xs rounded-full bg-slate-50 px-2 py-1 border border-slate-200 text-slate-700'>{f.name}</span>))}</div>}</div>
    <div className='flex gap-3'><button className='px-4 py-2 rounded-xl border border-slate-300 text-slate-700 hover:bg-slate-50' onClick={()=>nav('/dashboard')}>Cancelar</button>
    <button className='px-4 py-2 rounded-xl bg-blue-600 text-white hover:bg-blue-500' onClick={save}>Guardar plantilla</button></div></div></section></>); }
